group = 'host.exp.exponent'
version = '0.2.0'

def DEFAULT_COMPILE_SDK_VERSION = 28
def DEFAULT_BUILD_TOOLS_VERSION = '28.0.3'
def DEFAULT_MIN_SDK_VERSION = 16
def DEFAULT_TARGET_SDK_VERSION = 28

def DEFAULT_OKHTTP_VERSION = '3.14.9'

configurations {
  api
  implementation.extendsFrom(api)
  configurations.maybeCreate('default').extendsFrom(implementation)
  testImplementation
  kapt
}

dependencies {
  def GLIDE_VERSION = "4.12.0"

  //noinspection GradleDynamicVersion
  implementation 'com.facebook.react:react-native:+'  // From node_modules

  implementation "com.github.zjupure:webpdecoder:2.0.${GLIDE_VERSION}"
  api "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
  kapt "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"
  api 'com.caverock:androidsvg-aar:1.4'

  api 'com.github.bumptech.glide:okhttp3-integration:4.11.0'
  api "com.squareup.okhttp3:okhttp:${safeExtGet("okHttpVersion", DEFAULT_OKHTTP_VERSION)}"

  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.4.21')}"
  implementation "jp.wasabeef:glide-transformations:4.3.0"
}

if (System.env.MAVEN_EAS && !System.env.GENERATE_AAR_ON_THE_FLY) {
  def aarFile = fileTree(dir: System.env.MAVEN_EAS, include: "**/expo-image/${version}/*.aar").getFiles()[0]
  if (aarFile) {
    ext.isAarProject = true
    configurations.maybeCreate('default')
    artifacts.add('default', aarFile)
    return
  }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply plugin: 'kotlin-kapt'

buildscript {
  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  // The Android Gradle plugin is only required when opening the android folder stand-alone.
  // This avoids unnecessary downloads and potential conflicts when the library is included as a
  // module dependency in an application project.
  // ref: https://docs.gradle.org/current/userguide/tutorial_using_tasks.html#sec:build_script_external_dependencies
  if (project == rootProject) {
    repositories {
      google()
      jcenter()
    }
    dependencies {
      classpath 'com.android.tools.build:gradle:3.4.1'
      classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion', '1.4.21')}")
    }
  }
}

// Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

// Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

// Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    if (System.env.MAVEN_EAS) {
      maven {
        name "mavenEAS"
        url System.env.MAVEN_EAS
      }
    }

    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: repositories.find { it.name == "mavenEAS" }?.url ?: mavenLocal().url)
    }
  }
}

android {
  compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
  buildToolsVersion safeExtGet('buildToolsVersion', DEFAULT_BUILD_TOOLS_VERSION)

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
    targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
    versionCode 1
    versionName "0.2.0"
  }
  lintOptions {
    abortOnError false
  }
  sourceSets {
    main {
      java {
        if (safeExtGet("excludeAppGlideModule", false)) {
          srcDir "src"
          exclude "**/ExpoImageAppGlideModule.java"
        }
      }
    }
  }
}

repositories {
  // ref: https://www.baeldung.com/maven-local-repository
  mavenLocal()
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url "$rootDir/../node_modules/react-native/android"
  }
  maven {
    // Android JSC is installed from npm
    url "$rootDir/../node_modules/jsc-android/dist"
  }
  google()
  mavenCentral()
}

afterEvaluate {
  if (System.env.GENERATE_AAR_ON_THE_FLY) {
    bundleLibResDebug.finalizedBy(uploadArchives)
    bundleLibResRelease.finalizedBy(uploadArchives)
  }
}
