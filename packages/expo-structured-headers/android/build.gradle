group = 'host.exp.exponent'
version = '2.1.0'

configurations {
  api
  implementation.extendsFrom(api)
  configurations.maybeCreate('default').extendsFrom(implementation)
  testImplementation
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion', '1.6.10')}"
  implementation "androidx.appcompat:appcompat:1.2.0"

  testImplementation 'junit:junit:4.13.1'
  testImplementation 'commons-codec:commons-codec:1.14'
  testImplementation 'org.apache.johnzon:johnzon-core:1.2.5'
  testImplementation 'org.apache.geronimo.specs:geronimo-json_1.1_spec:1.4'
}

if (System.env.MAVEN_EAS) {
  def aarFile = fileTree(dir: System.env.MAVEN_EAS, include: "**/expo-structured-headers/${version}/*.aar").getFiles()[0]
  if (aarFile) {
    ext.isAarProject = true
    configurations.maybeCreate('default')
    artifacts.add('default', aarFile)
    return
  }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'

buildscript {
  // Simple helper that allows the root project to override versions declared by this library.
  ext.safeExtGet = { prop, fallback ->
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion', '1.6.10')}")
  }
}

// Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

// Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

// Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    if (System.env.MAVEN_EAS) {
      maven {
        name "mavenEAS"
        url System.env.MAVEN_EAS
      }
    }

    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: repositories.find { it.name == "mavenEAS" }?.url ?: mavenLocal().url)
    }
  }
}

android {
  compileSdkVersion safeExtGet("compileSdkVersion", 29)

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    minSdkVersion safeExtGet("minSdkVersion", 21)
    targetSdkVersion safeExtGet("targetSdkVersion", 28)
    versionCode 1
    versionName '2.1.0'
  }
  lintOptions {
    abortOnError false
  }
}

repositories {
  mavenCentral()
}

afterEvaluate {
  if (System.env.GENERATE_AAR_ON_THE_FLY) {
    bundleLibResDebug.finalizedBy(uploadArchives)
    bundleLibResRelease.finalizedBy(uploadArchives)
  }
}

task uploadExpoArchives {
  dependsOn(uploadArchives)
}
